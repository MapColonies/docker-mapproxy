{{- define "mapproxy-chart.mapproxy-bundle" }}
  replicas: {{ .Values.mapproxy.replicaCount }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}-{{ $chartName }}
      {{- include "mapproxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}-{{ $chartName }}
        {{- include "mapproxy.selectorLabels" . | nindent 8 }}
      {{- if .Values.resetOnConfigChange }}
      annotations:
        checksum/configmap: {{
          include (print $.Template.BasePath "/mapproxy-configmap.yaml") . | sha256sum }}
      {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      initContainers:
        ######################################################### Init Container Deployment #########################################################
        {{- template "mapproxy-chart.init-container" (merge (dict "releaseName" $releaseName "chartName" $chartName "cloudProviderDockerRegistryUrl" $cloudProviderDockerRegistryUrl "s3SecretName" $s3SecretName "postgresSecretName" $postgresSecretName) .)}}
      containers:
        ######################################################### MapProxy Deployment #########################################################
        {{- template "mapproxy-chart.mapproxy-container" (merge (dict "releaseName" $releaseName "chartName" $chartName "cloudProviderDockerRegistryUrl" $cloudProviderDockerRegistryUrl "s3SecretName" $s3SecretName) .) }}
        ######################################################### Mapproxinator Deployment #########################################################
        {{- template "mapproxy-chart.mapproxinator-container" (merge (dict "releaseName" $releaseName "chartName" $chartName "cloudProviderDockerRegistryUrl" $cloudProviderDockerRegistryUrl "s3SecretName" $s3SecretName) .) }}
      volumes:
        - name: mapproxy-config
          emptyDir: {}
        {{- if .Values.rasterCommon.db.sslEnabled }}
        - name: ca-file
          secret:
            secretName: {{ $postgresSecretName }}
            items:
              - key: caFile
                path: ca.pem
        - name: key-file
          secret:
            secretName: {{ $postgresSecretName }}
            items:
              - key: keyFile
                path: key.pem
        - name: cert-file
          secret:
            secretName: {{ $postgresSecretName }}
            items:
              - key: certFile
                path: cert.pem
        {{- end }}    
        {{- if .Values.rasterCommon.ca.secretName }}
        - name: root-ca
          secret:
            secretName: {{.Values.rasterCommon.ca.secretName }}
        {{- end }}                
        {{- if .Values.authentication.ssl.enabled }}
        - name: open-ssl
          secret:
            secretName: {{ $sslSecretName }}
        {{- end }}
        - name: uwsgi-config
          configMap:
            name: {{ .Release.Name }}-{{ $chartName }}-init-configmap
            items:
            - key: "UWSGI_INI"
              path: "uwsgi.ini"
            - key: "LOG_INI"
              path: "log.ini"
        {{- if .Values.rasterCommon.storage.fs.internalPvc.enabled }}
        - name: sources-storage
          persistentVolumeClaim:
            claimName: {{ .Values.rasterCommon.storage.fs.internalPvc.name }}
        {{- end }}
{{- end }}
