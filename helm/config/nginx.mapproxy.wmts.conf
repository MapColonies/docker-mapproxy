{{- if .Values.nginx.cache.enabled }}
proxy_cache_key "$host$request_uri";
proxy_cache {{ .Values.nginx.cache.keysZone }};
proxy_cache_valid 200 {{ .Values.nginx.cache.expirationTime }}; # will cache only valid 200 status code responses
proxy_cache_valid any 0; # will disable caching all not 200 status code responses
proxy_cache_background_update on; # Allows starting a background subrequest to update an expired cache item, while a stale cached response is returned to the client.
proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504; # return tile from cache in case of server down 
proxy_cache_revalidate on; # Enables revalidation of expired cache items
proxy_cache_lock on; # minimize the number of accesses to proxied servers when populating a new cache element
proxy_cache_min_uses 3; # Sets the number of requests after which the response will be cached
set $no_cache "";
if ($request_uri ~* \.xml) { # support blocking restful format request of capabilities
    set $no_cache "1";
}
if ($arg_request = "GetCapabilities") { # support blocking kvp format request of capabilities
    set $no_cache "1";
}
proxy_no_cache $no_cache;
proxy_cache_bypass $no_cache;
{{- end }}
